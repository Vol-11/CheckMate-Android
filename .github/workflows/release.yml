name: Manual Debug Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type (patch/minor/major)"
        required: true
        default: "patch"

permissions:
  contents: write  # ← Release作成に必要

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0   # 過去のタグを取得するために必須

      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Get next version
        id: version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          IFS='.' read -r major minor patch <<<"${latest_tag#v}"

          case "${{ github.event.inputs.release_type }}" in
            patch) patch=$((patch + 1)) ;;
            minor) minor=$((minor + 1)); patch=0 ;;
            major) major=$((major + 1)); minor=0; patch=0 ;;
          esac

          new_tag="v$major.$minor.$patch"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag ${{ steps.version.outputs.new_tag }}
          git push origin ${{ steps.version.outputs.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          name: "Debug APK ${{ steps.version.outputs.new_tag }}"
          body: "Debug build of the app."
          files: app/build/outputs/apk/debug/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
